name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - master

jobs:

  unit-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Run Unit Test
      run: go test -v ./...

  sast-scan:
    runs-on: ubuntu-latest
    needs: unit-test

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: --no-fail ./...

  build-docker:
    runs-on: ubuntu-latest
    needs: sast-scan

    env:
      REGISTRY: docker.io
      IMAGE_NAME: trihatmaja/azan-schedule
      K8S_NAMESPACE: azan-schedule

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ../.
        file: app/api/Dockerfile
        push: false
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: '${{ env.IMAGE_NAME }}:${{ github.sha }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: "HIGH,CRITICAL"
        vuln-type: 'os,library'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  # kubernetes-deployment:
    # runs-on: ubuntu-latest
    # - name: Set up kubectl
    #   uses: azure/setup-kubectl@v3
    #   with:
    #     version: 'latest'

    # - name: Set up Kubeconfig
    #   run: |
    #     mkdir -p ~/.kube
    #     echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
    #     chmod 600 ~/.kube/config

    # - name: Update image in deployment.yaml
    #   run: |
    #     sed -i "s|image:.*|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}|" k8s/deployment.yaml

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl apply -f k8s/
